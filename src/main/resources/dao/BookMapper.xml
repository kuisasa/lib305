<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zzu.lab305.lib305.impl.BookMapper" >
  <resultMap id="BaseResultMap" type="zzu.lab305.lib305.entity.Book" >
    <id column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_category" property="bookCategory" jdbcType="VARCHAR" />
    <result column="book_status" property="bookStatus" jdbcType="BIT" />
    <result column="book_user" property="bookUser" jdbcType="VARCHAR" />
    <result column="book_codeimg" property="bookCodeimg" jdbcType="VARCHAR" />
    <result column="book_author" property="bookAuthor" jdbcType="VARCHAR" />
    <result column="book_out_time" property="bookOutTime" jdbcType="TIMESTAMP" />
    <result column="book_re_time" property="bookReTime" jdbcType="TIMESTAMP" />
    <result column="book_img" property="bookImg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_id, book_name, book_category, book_status, book_user, book_codeimg, book_author, 
    book_out_time, book_re_time, book_img
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zzu.lab305.lib305.entity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zzu.lab305.lib305.entity.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zzu.lab305.lib305.entity.Book" >
    <selectKey keyProperty="bookId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book (book_id, book_name, book_category, 
      book_status, book_user, book_codeimg, 
      book_author, book_out_time, book_re_time, 
      book_img)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookCategory,jdbcType=VARCHAR}, 
      #{bookStatus,jdbcType=BIT}, #{bookUser,jdbcType=VARCHAR}, #{bookCodeimg,jdbcType=VARCHAR}, 
      #{bookAuthor,jdbcType=VARCHAR}, #{bookOutTime,jdbcType=TIMESTAMP}, #{bookReTime,jdbcType=TIMESTAMP}, 
      #{bookImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zzu.lab305.lib305.entity.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookCategory != null" >
        book_category,
      </if>
      <if test="bookStatus != null" >
        book_status,
      </if>
      <if test="bookUser != null" >
        book_user,
      </if>
      <if test="bookCodeimg != null" >
        book_codeimg,
      </if>
      <if test="bookAuthor != null" >
        book_author,
      </if>
      <if test="bookOutTime != null" >
        book_out_time,
      </if>
      <if test="bookReTime != null" >
        book_re_time,
      </if>
      <if test="bookImg != null" >
        book_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookCategory != null" >
        #{bookCategory,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null" >
        #{bookStatus,jdbcType=BIT},
      </if>
      <if test="bookUser != null" >
        #{bookUser,jdbcType=VARCHAR},
      </if>
      <if test="bookCodeimg != null" >
        #{bookCodeimg,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookOutTime != null" >
        #{bookOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookReTime != null" >
        #{bookReTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookImg != null" >
        #{bookImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zzu.lab305.lib305.entity.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookCategory != null" >
        book_category = #{record.bookCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStatus != null" >
        book_status = #{record.bookStatus,jdbcType=BIT},
      </if>
      <if test="record.bookUser != null" >
        book_user = #{record.bookUser,jdbcType=VARCHAR},
      </if>
      <if test="record.bookCodeimg != null" >
        book_codeimg = #{record.bookCodeimg,jdbcType=VARCHAR},
      </if>
      <if test="record.bookAuthor != null" >
        book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bookOutTime != null" >
        book_out_time = #{record.bookOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookReTime != null" >
        book_re_time = #{record.bookReTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookImg != null" >
        book_img = #{record.bookImg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_category = #{record.bookCategory,jdbcType=VARCHAR},
      book_status = #{record.bookStatus,jdbcType=BIT},
      book_user = #{record.bookUser,jdbcType=VARCHAR},
      book_codeimg = #{record.bookCodeimg,jdbcType=VARCHAR},
      book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      book_out_time = #{record.bookOutTime,jdbcType=TIMESTAMP},
      book_re_time = #{record.bookReTime,jdbcType=TIMESTAMP},
      book_img = #{record.bookImg,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zzu.lab305.lib305.entity.Book" >
    update book
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookCategory != null" >
        book_category = #{bookCategory,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null" >
        book_status = #{bookStatus,jdbcType=BIT},
      </if>
      <if test="bookUser != null" >
        book_user = #{bookUser,jdbcType=VARCHAR},
      </if>
      <if test="bookCodeimg != null" >
        book_codeimg = #{bookCodeimg,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookOutTime != null" >
        book_out_time = #{bookOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookReTime != null" >
        book_re_time = #{bookReTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookImg != null" >
        book_img = #{bookImg,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zzu.lab305.lib305.entity.Book" >
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_category = #{bookCategory,jdbcType=VARCHAR},
      book_status = #{bookStatus,jdbcType=BIT},
      book_user = #{bookUser,jdbcType=VARCHAR},
      book_codeimg = #{bookCodeimg,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_out_time = #{bookOutTime,jdbcType=TIMESTAMP},
      book_re_time = #{bookReTime,jdbcType=TIMESTAMP},
      book_img = #{bookImg,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>